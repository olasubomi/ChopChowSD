{"version":3,"sources":["components/product_slider/slide.js","components/product_slider/slider.js","components/product_slider/WithScrollbar.js","components/mealMenu/RecipeContentSection.js","components/mealMenu/ListedMealsSection.js","components/mealMenu/IngredientSection.js","components/productSection/ProductsPage.js","components/GroceryPage/CartPage/index.jsx","components/Login/index.jsx","components/CommonComponents/PageTitle/index.jsx","components/GroceryPage/index.jsx","components/signup/index.jsx","App.js","serviceWorker.js","index.js"],"names":["Slider","image","width","height","className","style","backgroundPosition","backgroundRepeat","float","src","defaultProps","Component","WithScrollbar","props","showThumbs","infiniteLoop","centerMode","centerSlidePercentage","this","products","map","ingredient","RecipeContentSection","mealPrep","selectedMeal","instructions","step","key","label","imageSrc","alt","readTime","cookTime","trigger","modal","contentStyle","close","onClick","containerStyle","id","listStyle","display","maxWidth","maxHeight","ListedMealsSection","styles","mealsListed","recipes","meal","showIngredients","IngredientSection","number","ingredientPopOver","stored_ingredients","availability","IngredientInfoToggle","bind","state","e","console","log","target","i","ingredientCount","ingredients","length","mealIngredients","onMouseOver","onMouseOut","Popover","placement","isOpen","toggle","PopoverBody","React","ProductSection","storeCollection","store_name","store_image","product_name","product_image","product_price","variations","sizes","respective_prices","price_per_ounce","price_per_gallon","price_per_pound","fetch","then","res","text","body","storeList","JSON","parse","push","catch","error","store_products","entries","value","productsMenu","productValue","color","closeOnDocumentClick","align","overflow","CartPage","cartInfo","idItem","message","match","params","setState","method","credentials","headers","json","response","data","Col","xs","md","lg","Card","Text","Login","email","password","messageErr","messageSuccess","isAuthenticated","handleClick","stringify","status","window","location","href","handleChange","name","Container","Modal","show","onHide","handleClose","backdrop","Body","Form","class","Group","Label","Control","type","placeholder","onChange","Button","to","PageTitle","title","GroceryPage","newcustomerId","valueData","Authentication","customerId","messageErrCreate","showAlert","messageAlert","variant","deletedItemId","showCreate","idsItems","deletedItemsId","lasIdListState","valueProductName","valueProductImage","valueProductPrice","valueProductSize","valuePricePerOunce","errormsg","auth","success","Authenticated","setTimeout","stopPropagation","handleShowDeleteItem","Accept","prevState","filter","item","handleShowAddItem","handleShowDeleteList","resDelete","handleShowCreateList","handleCreateList","startsWith","endsWith","errormsgImage","arrResponse","lasIdList","lasIdCustomer","dataTypeaheadProps","Alert","Row","itemList","Header","Spinner","animation","Footer","SignUp","phone","username","showModal","emailNotification","currentTarget","checked","delay","history","formSubmit","preventDefault","submitForm","closeButton","Title","textAlign","fontSize","onSubmit","controlId","Check","ButtonToolbar","App","meals","meal_popups","event","mealString","innerText","selectedMealIngredients","handleLogout","suggestMealToggle","updateInstructionsDisplayBaseIndex","messageVisible","option","itemTypeahead","valueAllDataLists","suggestMealPopOver","mealSelected","IngredientsListed","hidden","showProducts","mealsLength","base_index","topNav_className","productsList","err","index","button","last_chars","slice","slide_num","Number","handleClickTypeahead","optionItem","responseGet","arrAllData","resArr","new_ingredients","items","popUpSlides","instructionsLength","ingredientsList","x","document","getElementById","y","intro","backgroundColor","product_slider","myFunction","handleClickGrocery","multiple","options","exact","path","render","component","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.19f6e464.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nconst Slider = ({image, width, height}) => {\n    const backgroundImage =`${image}`;\n    const styles = {\n    //   backgroundImage: '/images/Arrow.png',//`${backgroundImage}`,\n      backgroundPosition: 'center top',\n      backgroundRepeat: 'no-repeat',\n      float: 'left',\n      width: `auto`,\n      height: `auto`\n    }\n    return (\n      <div className=\"slide\" style={styles}>\n      {/* <img src={'/images/products/sugar.jpeg'} /> */}\n      <img src={image} style={{width:\"100px\", height:\"100px\"}} />\n\n      </div>\n    )\n}\nSlider.defaultProps = {\n  width: 300,\n  height: 600\n}\nSlider.propTypes = {\n  image: PropTypes.string.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired\n}\nexport default Slider;","import React, { Component } from 'react';\nimport Slide from './slide.js'\n\nexport default class Slider extends Component {\n  constructor(props) {\n    super(props)\n    // match product names passed from props, to product image passed to Slider\n    this.state = {\n        width: 200,\n        height: 100,\n        images: ['/images/products/sugar.jpeg', '/images/products/onion.jpg', '/images/products/tomato.jpg', '/images/products/water.jpeg', '/images/products/vegetable_oil.jpg']\n      }\n\n  }\n  slideLeft() {\n    let last = this.state.images.slice(-1)\n    let rest = this.state.images.slice(0, -1)\n    let images = [last, ...rest]\n    this.setState({images: images});\n  }\n\n  slideRight() {\n    let [first, ...rest] = this.state.images;\n    let images = [...rest, first];\n    this.setState({images: images});\n  }\n    \n  renderNavigation(){\n    return (\n      <div className=\"slider-arrows\">\n    <a className=\"arrow left\" onClick={() => this.slideLeft()}>\n      <img src={'/images/Arrow.png'} style={{\"width\":\"50px\"}}/> \n    </a>\n    <a className=\"arrow right\" onClick={() => this.slideRight()}>\n      <img src={'/images/Arrow.png'} style={{\"width\":\"50px\"}}/>\n    </a>\n    </div>\n    )\n  }\n\n  renderSlides=()=> {\n    const images = this.state.images;\n    return (\n      <div className=\"slider-items\">\n        {\n          images.map((image, index) => {\n            return (\n              <Slide image={image} width={this.state.width} height={this.state.height} key={index} />\n            )\n          })\n        }\n      </div>\n    )\n  }\nrender() {\nreturn (\n    <div className=\"slider\">\n                {this.renderNavigation()}\n                {this.renderSlides()}\n    </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from 'react-responsive-carousel';\n \nexport default class WithScrollbar extends Component {\n\n   constructor(props) {\n     super(props)\n  }\n    render() {\n        return (\n            <Carousel showThumbs={false} infiniteLoop={true} centerMode={true} centerSlidePercentage={100 / 2}>\n              {this.props.products.map(ingredient => (\n                <div>\n                    <p className=\"\">{ingredient.ingredient}</p>\n                    <img src={\"/images/products/\"+ingredient.image} />\n\n                </div>\n              ))}\n               \n            </Carousel>\n        );\n    }\n}\n","import React, { Component } from 'react';\n//import {Typeahead} from 'react-bootstrap-typeahead';\nimport Popup from \"reactjs-popup\";\n\n\nclass RecipeContentSection extends Component {\n   \n    render(){\n        //var imgsrc = this.props.selectedMeal.imageSrc;\n        const mealPrep = this.props.selectedMeal.instructions.map((step)=> <li key={step} > {step} </li>);\n\n            return (\n                <div>                  \n                    <div>{this.props.selectedMeal.label} </div>\n                    <div> \n                    {/* <img src={require('./images/Garri.jpg')}/> */}\n                    {/* <img src={this.props.selectedMeal.imageSrc} alt=\"alt\"/> */}\n                    <img src={this.props.selectedMeal.imageSrc} alt='info' style={{width:'350px', height:'350px'}}/>\n                    {/* <img src={require('/images/Garri.jpg')} alt='info' style={{width:'13px', height:'13px'}}/> */}\n                    </div>\n                    <div>{this.props.selectedMeal.readTime} </div>\n                    <div> {this.props.selectedMeal.cookTime}</div>\n                    <Popup trigger={<u>Click here to read steps</u>} modal \n                        contentStyle={contentStyle}>\n                        {close => (\n                            <div>\n                                <a className=\"close\" onClick={close}>&times;</a>\n                                <div className=\"container\" style={containerStyle} id=\"bigContainer\">\n                                <div className=\"row align-items-center\">\n                                    <img src={this.props.selectedMeal.imageSrc} alt='info' style={{width:'35%', height:'35%'}}></img>\n                                    <div className=\"col-sm\"><ol style={listStyle}>{mealPrep}</ol></div>\n                                </div>\n                                    <div className=\"row\" >\n                                     <div className=\"container\"> {/*Trying to create a new sub container*/}\n                                        <div className = \"row\">\n                                            <div className=\"col-sm\">\n                                                \n                                            </div>\n                                        </div>\n                                         </div>\n                                        \n        {/*<img src=\"../images/Arrow--NicholasJudy456.png\" width=\"50%\" height=\"40%\" onclick=\"DoSomething();\"/>*/}\n        {/* <button onClick=\"DoSomething\" style={buttonStyle}>Next Page</button> */}\n                                    </div>\n                            </div>\n                        </div>\n                        )}           \n                    </Popup>\n                    {/* <ol> {mealPrep}</ol> {/*trigger={<a href=\"#\">Click hear to read steps</a>}*/}\n\n                </div>\n        );\n            \n    } \n\n   \n    \n}\n\nconst containerStyle = {\n        //font: \"50px\",\n        display: \"inline-block\",\n        width: \"100%\",\n        height: \"100%\"\n}\n\nconst contentStyle = {\n    // borderRadius: \"25px\",\n    maxWidth: \"100%\",\n    maxHeight: \"100%\",\n    // width: \"90%\",\n    // height: \"50%\",\n   \n};\n\nconst listStyle = {\n   \n}\n\n// const buttonStyle={\n//     display:\"inline-block\"\n// }\n\n// const arrowPic = {\n//     width: \"50%\",\n//     height: \"40%\"\n// }\n\n\n\n\nexport default RecipeContentSection;\n","import React, { Component } from 'react';\n\n\nclass ListedMealsSection extends Component {\n    \n        render() {\n            let styles ={\n                \"backgroundColor\":'#fd8953'\n            }\n            const mealsListed = this.props.recipes.map(\n                (meal)=> {\n                    //console.log(this.props.selectedMeal);\n                    if(meal === this.props.selectedMeal){\n                        return  <li key={meal.id} onClick={this.props.showIngredients}> <span style={styles}><b>{meal.label}</b></span> </li>\n                    }\n                    else{\n                        return <li key={meal.id} onClick={this.props.showIngredients}> {meal.label} </li>\n                    }\n                })\n\n            return (\n                <div>                    \n                    <ol> {mealsListed} </ol>\n                </div>\n            );\n        }\n}\n\nexport default ListedMealsSection;","import React from 'react';\nimport { Popover, PopoverBody } from 'reactstrap';\n\n\nclass IngredientSection extends React.Component {\n    number = 3;\n    ingredientPopOver= true;\n    stored_ingredients= [{ \"Garri\": {availability: [\"Lizy Gidy\"]}, \"Water\": {availability: [\"Lizy Gidy\"]}, \"Sugar\": {availability: [\"Lizy Gidy\"]},\n\"Rice- 3 Cups\": {availability: [\"Lizy Gidy\"]}, \"Tomatoes x 6\": {availability: [\"Lizy Gidy\"]}, \"Onion x 2\": {availability: [\"Lizy Gidy\"]}, \n\"Palm Oil- 2 Cups\": {availability: [\"Lizy Gidy\"]},\"Black Eyed Beans x 1 bag(350mL)\": {availability: [\"Lizy Gidy\"]}, \"Onions x 2\": {availability: [\"Lizy Gidy\"]},\n\"Potatoes - 8\": {availability: [\"Lizy Gidy\"]}, \"Garlic- 6 cloves\": {availability: [\"Lizy Gidy\"]}, \n\"Thyme\": {availability: [\"Lizy Gidy\"]}, \"Oregano\": {availability: [\"Lizy Gidy\"]}, \"Basil\": {availability: [\"Lizy Gidy\"]},\n\"Parmesan Cheese\": {availability: [\"Lizy Gidy\"]}, \"Oil\": {availability: [\"Lizy Gidy\"]}, \"Butter\": {availability: [\"Lizy Gidy\"]}}];\n\n    constructor(props){\n        super(props);\n        this.IngredientInfoToggle = this.IngredientInfoToggle.bind(this);\n\n        this.state={\n            ingredientPopOver: false,\n        }\n    }\n\n    IngredientInfoToggle(e) {\n        console.log(\"toggled by:\"+e.target);\n        console.log()\n        // figure out which popver it is\n        // this.setState({\n        //     ingredientPopOver: !this.state.ingredientPopOver\n        // });\n    }\n\n    render(){\n        let ingredientCount = this.props.selectedMeal.ingredients.length;\n         const mealIngredients = (this.props.selectedMeal.ingredients).map((ingredient)=>\n            <li key={ingredient}> {ingredient} &nbsp;\n                <span id={ingredient} onMouseOver={this.IngredientInfoToggle} onMouseOut={this.IngredientInfoToggle} >\n                    <img src=\"/images/info_icon.png\" alt=\"Product details not found\" style={{width:'13px', height:'13px'}}/>\n                </span>\n            </li>\n                     );\n\n        var i;\n        var popovers;\n        for(i=0; i< ingredientCount;i++){\n            popovers+= <Popover placement=\"auto\" isOpen={this.ingredientPopOver} target={this.props.selectedMeal.ingredients[i]} toggle={this.IngredientInfoToggle}>\n            <PopoverBody><div className=\"payback-disclaimer\">\n                In Stock in {this.stored_ingredients} store(s)<br></br>\n                <hr></hr>\n                <button>Add to WishList</button><br></br>\n                <button>Add to Cart </button> <br></br>\n                    \n            </div></PopoverBody>\n        </Popover>;\n        }\n        // const popovers = (this.props.selectedMeal.ingredients).map((ingredient)=>\n        //     <Popover placement=\"auto\" isOpen={this.ingredientPopOver} target={ingredient} toggle={this.IngredientInfoToggle}>\n        //         <PopoverBody><div className=\"payback-disclaimer\">\n        //             In Stock in {this.stored_ingredients} store(s)<br></br>\n        //             <hr></hr>\n        //             <button>Add to WishList</button><br></br>\n        //             <button>Add to Cart </button> <br></br>\n                        \n        //         </div></PopoverBody>\n        //     </Popover>);\n        {/* const mealIngredients = <li>{this.props.selectedMeal}</li>;\n         (this.props.selectedMeal.ingredients).map(\n             (ingredient) => \n             <li key={ingredient[0].toString()}> {ingredient} s {ingredient[0]} t\n             <span id=\"Popover2\" onMouseOver={this.IngredientInfoToggle} onMouseOut={this.IngredientInfoToggle} >\n             <img src=\"/images/info_icon.png\" alt=\"info\" style={{width:'13px', height:'13px'}}/> </span></li> ); */}\n\n            return (\n                <div>                    \n                    <ul> {mealIngredients} </ul>\n                    {/* {popovers} */}\n                    {/* <Popover placement=\"auto\" isOpen={this.ingredientPopOver} target={'Garri'} toggle={this.IngredientInfoToggle}>\n            <PopoverBody><div className=\"payback-disclaimer\">\n                In Stock in {this.stored_ingredients} store(s)<br></br>\n                <hr></hr>\n                <button>Add to WishList</button><br></br>\n                <button>Add to Cart </button> <br></br>\n                    \n            </div></PopoverBody>\n        </Popover>; */}\n                    \n                    {/* <button>ADD ALL<br></br>PRODUCTS<br></br>TO CART</button> */}\n                </div>\n        );\n    }\n}\n\nexport default IngredientSection","import React, { Component } from 'react';\nimport Popup from \"reactjs-popup\";\n\nclass ProductSection extends Component {\n\n    storeCollection = [\n    {\n        store_name: \"Lizy Gidy\",\n        store_image: '/images/store_pics/lizy_gidy.jpg',\n        products:[{\n            product_name: \"Garri\",\n            product_image: '/images/products/garri.jpg',\n            product_price: 8.99,\n            variations:[\"Ijebu Garri\", \"Ghana Garri\",\"Yellow Garri\"],\n            sizes:[\"50lbs\"]\n        },{\n        product_name:\"Palm Oil\",\n        product_image: '/images/products/ola_ola_palm_oil.jpg',\n        product_price: 8.99,\n        sizes:[\"64 oz\",\"32 oz\",\"17.6 choleterol free\", \"35.2\",\"105.60\"],\n        respective_prices:[ 19.99,10.99,7.99,13.99,29.00]\n        },{\n        product_name:\"Beans\",\n        product_image: '/images/products/beans.jpeg',\n        product_price: 12.00,\n        variations:[\"Brown Beans\",\"Honey Beans\"],\n        sizes:[\"2 lbs\"],\n        price_per_ounce: 3.2\n        }\n    ]},\n    {\n        store_name:\"African Carribean Market\",\n        store_image: '/images/store_pics/african_carribean_storefront_people.jpg',\n        products:[{\n            product_name:\"Palm Oil\",\n            product_image: '/images/products/ola_ola_palm_oil.jpg',\n            product_price: 8.99,\n            variations:[\"Ola-Ola Palm Oil\",\"Omni Red Palm Oil 100% unrefined\"],\n            sizes:[\"1.32 Gallons\",\"0.9 Gallons\",\"50lbs\" ],\n            price_per_gallon: 3.00,\n            price_per_pound: 0.30\n\n        },{\n            product_name:\"Beans\",\n            product_image: '/images/products/beans.jpg',\n            product_price: 2.25,\n            variations:[ \"Black Eyes Peas\",\"Whole Green Peas\",\"Pinto Beans\",\"Red Kidney Beans\",\"Large Lime Beans\"],\n            sizes: \"0.5 L\"       \n        },{\n            product_name:\"Egusi\",\n            product_image: '/images/products/egusi.jpg',\n            product_price: 9.95,\n            sizes:\"5 Lbs\"\n        },{\n        product_name:\"Garri\",\n        product_image: '/images/products/garri.jpg',\n        product_price: 8.99,\n        variations:[\"Ijebu Garri\",\"Ghana Garri\",\"Yellow Garri\"],\n        sizes:\"50lbs\"\n        }]\n    }     \n]\n// storeCollection = []\n\ncomponentDidMount(){\n    console.log(\"Comes in product pages component did mount\")\n    var url = \"https://chopchowsd.herokuapp.com/get_store_products\" // for production\n    // var url = \"http://localhost:5000/get_store_products\"\n\n     fetch(url)\n        .then(res => res.text())\n        .then(body => {\n            var storeList = JSON.parse(body);\n\n             for(var i = 0 ; i < storeList.length; i++){\n                 console.log(storeList[i]);\n                this.storeCollection.push(storeList[i].store_name);\n                console.log(storeList[i].store_name)\n            }\n        })\n        .catch(error=>{\n            console.log(error);\n        })\n}\n\n        render() {\n            var store_products = []\n            for (const  [index, value] of this.storeCollection.entries()){\n                var productsMenu = []\n                // console.log(index);\n                console.log(value);\n\n                for (const [storeProductsIndex, productValue] of value.products.entries()) {\n                    // console.log(\"Inner for loop\");\n                    //const element = array[index];\n                    // console.log(storeProductsIndex);\n                    // console.log(productValue.product_name);\n                    //productsMenu.push(productValue.product_name)\n                    // check for if product has variations\n\n                    //productsMenu.push(productValue.product_name)\n                    var key = value.store_name+productValue.product_name\n                    productsMenu.push(\n                        <div className=\"col-sm-12 col-md-6 col-lg-4 mealContainer\"  key = {key} >\n                            <div>\n                                <div style={containerStyle}>\n                                    \n                                       \n                                        <Popup \n                    trigger={\n                        <div id = {productValue.id} style={containerStyle}>\n                        <img src={productValue.product_image} className=\"images\" style={{width:\"100%\"}} alt={productValue.id}></img>\n                                    <div id=\"textbox\">\n                                        <p className=\"alignleft\">{productValue.product_name}</p>\n                                        <p className=\"alignright\"  style={{color: \"green\"}}>${productValue.product_price}</p>\n                                    </div>\n                        {/* <button style={{backgroundColor: \"orange\" }}>View Steps</button>   */}\n \n                        </div> \n                    } modal closeOnDocumentClick contentStyle={contentStyle}>\n                    {/* Inside Pop - up */}\n                    <div>\n                    {productValue.product_name}\n                    <br></br>\n                    Availability\n                    </div>\n\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-sm-6\"><b>\n                            <img src={productValue.product_image} alt='info' style={{ width:\"100%\", height:\"100%\", align:\"center\"}}></img>\n                                {/* <div className=\"col\"></div> */}\n                                </b>\n                            </div> \n                            <div className=\"col-sm-6\"><b>\n                                {/* <div className=\"col\">{productValue.product_price}</div> */}\n                                {/* <div className=\"col\">{productValue.sizes}</div> */}\n                                Availabile<br></br>\n                                Variations:<br></br>\n                                Price:\n                                </b>\n                            </div> \n                        </div>\n                    </div>\n\n                    <span>View Product</span>&nbsp;|&nbsp;<span>Update Product</span>&nbsp;|&nbsp;<span>Add To Cart..</span>\n                    <hr></hr>\n                    {/* <div className=\"col\">\n                        <div className=\"col align-items-center\"><ol>{mealPrep}</ol></div>\n                    </div> */}\n                            \n                    {/* </div> */}\n                        \n                    {/* </div> */}\n                    {/* <div>\n                    <div className=\"col align-items-left\">\n                        <img src={value.imageSrc} alt='info'  style={{width:'35%', height:'35%', align:\"center\"}}></img>\n                    </div>\n                    <div>                            \n                        <div className=\"col align-items-center\"><ol>{mealPrep}</ol></div>\n                    </div>\n                    </div>\n                    */}\n                 </Popup>\n                                    </div>\n                                </div>\n                            </div>\n                    )\n\n                }\n\n                store_products.push(\n                    <div key={value.store_name}>\n                        <hr></hr>\n                        <img src={value.store_image} className=\"images\" style={{width:\"10%\"}} alt={value.id}></img>\n                        <b>{value.store_name}</b>\n\n                            <br></br>\n                        <div className=\"container\">\n                            \n                           <div className=\"row \">\n                           {productsMenu}\n                           </div>\n                       </div>\n                        <hr></hr>\n                    </div>\n                )\n\n\n            }\n\n\n\n            return (\n                <div>                    \n                    <div id=\"title\"><b>Our Products</b></div>\n                    {store_products}\n                </div>\n            );\n        }\n}\n\nconst containerStyle = {\n    //font: \"50px\",\n    display: \"inline-block\",\n    width: \"100%\",\n    height: \"100%\",\n    \n}\n\nconst contentStyle = {\n    // borderRadius: \"25px\",\n    maxWidth: \"100vw\",\n    maxHeight: \"100vh\",\n    overflow: \"scroll\"\n    // width: \"90%\",\n    // height: \"50%\",\n    \n    };\n\n\n\nexport default ProductSection;","/* eslint-disable jsx-a11y/img-redundant-alt */\nimport React from 'react';\nimport './style.css';\nimport {Container,  Card, Col} from 'react-bootstrap'\n\nexport default class CartPage extends React.Component {\n  state = {\n    cartInfo:'',\n    idItem:'',\n    message:''\n  }\n  componentDidMount() {\n    const {\n      match:{\n        params:{idItem}\n      }\n    } = this.props;\n    this.setState({idItem})\n  fetch(`/api/get-data-item/${idItem}`,{\n    method:'GET',\n    credentials: 'same-origin',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n  .then(res=>{\n    return res.json()\n  })\n  .then(response=>{\n    this.setState({cartInfo:response.data[0]})\n    \n  })\n  .catch(()=>{\n    this.setState({ message: 'Sorry , Internal Server ERROR' })\n    \n  })\n\n  }\n  render() {\n    const { cartInfo } = this.state;\n\n    return (\n      <>\n            <h3 className=\"cart-page__title\">Current Order</h3>\n              <Col xs={12} md={12} lg={12} key={cartInfo.id}>\n                <div className=\"cart-page__card-div\">\n                    <div className=\"cart-page__name-product\"> {cartInfo.product_name}</div>\n                  <Card.Text className=\"cart-page__size-product\">\n                    {cartInfo.sizes}\n                  </Card.Text>\n                  <Card.Text className=\"cart-page__pice-per-ounce-product\">\n                    {cartInfo.price_per_ounce}\n                  </Card.Text>\n                  <Card.Text className=\"cart-page__price-product\">\n                    ${cartInfo.product_price}\n                  </Card.Text>\n                </div>\n                </Col>    \n              \n            </>\n    )\n        }\n      }\n","import React from 'react';\nimport './style.css';\nimport { Form, Button, Container ,Modal} from 'react-bootstrap';\n\n import { Link, Redirect } from 'react-router-dom';\n\n export default class Login extends React.Component {\n  state = {\n    email: '',\n    password: '',\n    messageErr:false,\n    messageSuccess:false,\n    isAuthenticated: false,\n  };\n\n   handleClick = () => {\n    const { email, password } = this.state;\n    if (email && password) {\n\n       // make a requset to the back with method post and data{email , password}\n      fetch('/api/login', {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify({\n          email,\n          password,\n        }),\n      })\n        .then(response => {\n          if (response.status === 400 || response.status === 404) {\n            this.setState({ messageErr: 'Bad Request , Check username or password ... !!' });\n          } else if (response.status === 401) {\n            this.setState({ messageErr: 'you are UnAuthorized' });\n          } else if (response.status >= 500) {\n            this.setState({ messageErr: 'Sorry , Internal Server ERROR' })\n          } else {\n            this.setState({messageErr:''});\n            this.setState({isAuthenticated:true})\n            this.setState({ messageSuccess: 'login sucessfully '});\n            return window.location.href = '/grocery'\n          }\n        })\n\n\n     } else {\n      this.setState({ messageErr: 'Please enter all fields' });\n    }\n  };\n\n   handleChange = ({ target: { value, name } }) =>\n    this.setState({ [name]: value });\n\n   render() {\n    const { email, password, messageErr, messageSuccess } = this.state;\n    return (\n      <> \n        <Container>\n        <Modal show=\"true\" onHide={this.handleClose} className=\"modal\" backdrop=\"static\">\n                        <Modal.Body>\n\n                           <Form className=\"login__form\">\n                            <div className=\"login__form-div-title\">\n                            <h2 className=\"login__form-title\">Log in to View Grocery List</h2>\n\n                             </div>\n\n\n\n                           <div className=\"vl\">\n                            <span className=\"vl-innertext\">or</span>\n                          </div>\n\n                           <div className=\"col\">\n                            <a href=\"#\" className=\"fb btn\">\n                                <i class=\"fa fa-facebook fa-fw\"></i> Login with Facebook\n                                                  </a>\n                            <a href=\"#\" className=\"google btn\"><i class=\"fa fa-google fa-fw\">\n                            </i> Login with Google+\n                                                  </a>\n                          </div>\n\n                           <div className=\"col\">\n                            <div className=\"hide-md-lg\">\n                                <p>Or sign in manually:</p>\n                            </div>\n                          </div>\n                            <Form.Group>\n                            <Form.Label>Email :</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                name=\"email\"\n                                value={email}\n                                placeholder=\"Enter your email\"\n                                onChange={this.handleChange}\n                            />\n                            </Form.Group>\n                            <Form.Group>\n                            <Form.Label>Password :</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                name=\"password\"\n                                value={password}\n                                placeholder=\"Enter your password\"\n                                onChange={this.handleChange}\n                            />\n                            </Form.Group>\n                                <p className=\"msg-success\">{messageSuccess}</p>\n                                <p className=\"msg-err\">{messageErr}</p> \n                                <Link>\n                                <span className=\"link-forgot-password\">Forget Password  ?</span>\n                                </Link>\n\n                                 <Button\n                                  type=\"button\"\n                                  className=\"login__form-btn\"\n                                  onClick={this.handleClick}\n                                >\n                                  Log in\n                              </Button>\n                            <Form.Text className=\"login__form__text-muted\">\n                            Don’t have an account? {''}\n\n                             <Link className=\"link-signup-word\" to=\"/signup\">\n                            Sign Up  \n                            </Link>\n                            <br/>\n                            or\n\n                             <Link className=\"link-guest-word\" to=\"/aguest\">\n                            continue as guest \n                            </Link>\n\n                             </Form.Text>\n                          </Form>\n                          </Modal.Body>\n                      </Modal>\n        </Container>\n      </>\n    );\n  }\n  \n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './style.css';\n    \nexport default function PageTitle(props) {\n  const { title } = props;\n  return <h2 className=\"pageTitle\">{title}</h2>;\n}\n\nPageTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\n","\nimport React from 'react';\nimport './style.css';\nimport PageTitle from '../CommonComponents/PageTitle'\nimport { Spinner } from 'react-bootstrap'\nimport { Container, Alert, Card, Col, Row, Form, Button, Modal } from 'react-bootstrap'\nimport { Link } from 'react-router-dom';\nexport default class GroceryPage extends React.Component {\n  state = {\n    newcustomerId: '',\n    valueData: null,\n    Authentication: false,\n    customerId: null,\n    email: '',\n    password: '',\n    messageErr: false,\n    messageSuccess: false,\n    messageErrCreate: false,\n    showAlert: false,\n    messageAlert: '',\n    variant: '',\n    idItem: '',\n    deletedItemId: null,\n    showCreate: true,\n    idsItems: null,\n    deletedItemsId: null,\n    lasIdListState: null,\n    valueProductName: '',\n    valueProductImage: '',\n    valueProductPrice: '',\n    valueProductSize: '',\n    valuePricePerOunce: '',\n    errormsg: '',\n  }\n\n  handleChange = ({ target: { value, name } }) =>\n    this.setState({ [name]: value });\n\n  componentDidMount() {\n    const { auth } = this.props;\n    this.setState({ Authentication: auth })\n    fetch('/api/grocery', {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(response => {\n        if (response.success && response.data) {\n          this.setState({ Authentication: true });\n        } else {\n          this.setState({ Authenticated: false })\n        }\n        this.setState({ customerId: response.data })\n        const { customerId } = this.state;\n        fetch(`/api/getList/${customerId}`, {\n          method: 'GET',\n          credentials: 'same-origin',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n\n        })\n          .then(res => {\n            return res.json()\n          })\n          .then(response => {\n            if (response) {\n              this.setState({ valueData: response.data })\n            }\n          })\n          .catch(() => {\n            this.setState({\n              messageAlert: 'Internal Server Error',\n              showAlert: true,\n              variant: 'danger'\n            },\n              () =>\n                setTimeout(() => {\n                  this.setState({ messageAlert: '', showAlert: false })\n                }, 8000)\n            )\n          })\n      })\n\n    this.handleClick = () => {\n      const { email, password } = this.state;\n      if (email && password) {\n        fetch('/api/login', {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-type': 'application/json',\n          },\n          body: JSON.stringify({\n            email,\n            password,\n          }),\n        })\n          .then(response => {\n            if (response.status === 400 || response.status === 404) {\n              this.setState({ messageErr: 'Bad Request , Check username or password ... !!' });\n            } else if (response.status === 401) {\n              this.setState({ messageErr: 'you are UnAuthorized' });\n            } else if (response.status >= 500) {\n              this.setState({ messageErr: 'Sorry , Internal Server ERROR' })\n            } else {\n              this.setState({ messageErr: '' });\n              this.setState({ isAuthenticated: true })\n              this.setState({ messageSuccess: 'login sucessfully ' });\n              return window.location.href = '/grocery'\n            }\n          })\n          .catch(() => {\n            this.setState({\n              messageAlert: 'Internal Server Error',\n              showAlert: true,\n              variant: 'danger'\n            },\n              () =>\n                setTimeout(() => {\n                  this.setState({ messageAlert: '', showAlert: false })\n                }, 8000)\n            )\n          })\n      } else {\n        this.setState({ messageErr: 'Please enter all fields' });\n      }\n    };\n\n\n    this.handleClose = e => {\n      if (e) e.stopPropagation();\n      this.setState({ showCreate: false });\n    };\n    this.handleShowDeleteItem = (idItem) => {\n      this.setState({ deletedItemId: idItem });\n      const { customerId, deletedItemId } = this.state;\n      fetch(`/api/remove-item/${idItem}/${customerId}`, {\n        method: 'DELETE',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n\n      })\n        .then(res => {\n          return res.json()\n\n        })\n        .then(response => {\n          this.setState({\n            messageAlert: 'deleted successfully',\n            showAlert: true,\n            variant: 'success'\n          },\n            () =>\n              setTimeout(() => {\n                this.setState({ messageAlert: '', showAlert: false })\n              }, 3500)\n          )\n          this.setState(prevState => {\n            const newValueData = prevState.valueData.filter(\n              item => item.id !== deletedItemId\n            );\n            return { valueData: newValueData };\n          });\n\n        })\n        .catch(() => {\n          this.setState({\n            messageAlert: 'Internal Server Error',\n            showAlert: true,\n            variant: 'danger'\n          },\n            () =>\n              setTimeout(() => {\n                this.setState({ messageAlert: '', showAlert: false })\n              }, 8000)\n          )\n        })\n    }\n    this.handleShowAddItem = (idItem) => {\n      window.location.href = `cart-page/${idItem}`\n    }\n\n    this.handleShowDeleteList = (idsItems) => {\n      const { customerId } = this.state;\n      fetch(`/api/get-ids-items/${customerId}`, {\n        method: 'GET',\n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n\n      })\n        .then(res => res.json())\n        .then(response => {\n          if (response) {\n            let arrResItemDelete = response.data\n            arrResItemDelete.map((resDelete) =>\n              this.setState({ deletedItemsId: resDelete })\n            )\n          }\n        })\n        .catch(() => {\n          this.setState({\n            messageAlert: 'Internal Server Error',\n            showAlert: true,\n            variant: 'danger'\n          },\n            () =>\n              setTimeout(() => {\n                this.setState({ messageAlert: '', showAlert: false })\n              }, 8000)\n          )\n        })\n\n      fetch(`/api/remove-list/${customerId}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n\n      })\n        .then(res => {\n          return res.json()\n        })\n        .then(response => {\n          this.setState({\n            messageAlert: 'deleted successfully',\n            showAlert: true,\n            variant: 'success'\n          },\n            () =>\n              setTimeout(() => {\n                this.setState({ messageAlert: '', showAlert: false })\n              }, 3500)\n          )\n\n          this.setState({ valueData: [] });\n        })\n        .catch(() => {\n          this.setState({\n            messageAlert: 'Internal Server Error',\n            showAlert: true,\n            variant: 'danger'\n          },\n            () =>\n              setTimeout(() => {\n                this.setState({ messageAlert: '', showAlert: false })\n              }, 8000)\n          )\n        })\n    }\n\n    this.handleShowCreateList = () => {\n      this.setState({ showCreate: true })\n    }\n\n    this.handleCreateList = () => {\n      const { lasIdListState, valueProductName, valueProductImage, valueProductPrice, valuePricePerOunce, valueProductSize } = this.state;\n      if (valueProductName && valueProductImage && valueProductPrice && valueProductSize && valuePricePerOunce) {\n        if (valueProductImage.startsWith('http://') || valueProductImage.startsWith('data') || valueProductImage.endsWith('png') || valueProductImage.endsWith('jpg') || valueProductImage.endsWith('gif')) {\n\n          const { customerId } = this.state;\n          const idItem = lasIdListState;\n          fetch(`/api/create-list/${idItem}/${customerId}`, {\n            method: 'POST',\n            body: JSON.stringify({\n              valueProductName,\n              valueProductImage,\n              valueProductPrice,\n              valueProductSize,\n              valuePricePerOunce,\n            }),\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json',\n            },\n          })\n            .then(res => {\n              return res.json();\n            })\n            .then(response => {\n              if (response) {\n                const { valueData } = this.state;\n                this.setState({ valueData: [...valueData, ...response.data], errormsgImage: '', errormsg: '', valueProductName: '', valueProductImage: '', valueProductSize: '', valueProductPrice: '', valuePricePerOunce: '', lasIdListState: lasIdListState + 1 })\n              }\n            })\n        } else {\n          this.setState({ messageErrCreate: ' Image check: should start with word:  \"data\" or \"http\" or end word \"png\" , \"jpg\",\"gif\" ' })\n        }\n      } else {\n        this.setState({ messageErrCreate: 'Be sure all fields are filled.' })\n\n      }\n\n    }\n\n    fetch('/api/get-ids-list', {\n      method: 'GET',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(response => {\n        let arrResponse = response.data;\n        const lasIdList = arrResponse[arrResponse.length - 1]\n        this.setState({ lasIdListState: lasIdList + 1 })\n      })\n    fetch('/api/get-ids-customers', {\n      method: 'GET',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n\n    })\n      .then(res => {\n        return res.json()\n      })\n      .then(response => {\n        let arrResponse = response.data;\n        const lasIdCustomer = arrResponse[arrResponse.length - 1]\n        this.setState({ newcustomerId: lasIdCustomer + 1 })\n      })\n      .catch(() => {\n        this.setState({\n          messageAlert: 'Internal Server Error',\n          showAlert: true,\n          variant: 'danger'\n        },\n          () =>\n            setTimeout(() => {\n              this.setState({ messageAlert: '', showAlert: false })\n            }, 8000)\n        )\n      })\n  }\n\n  render() {\n    const { email, password, showAlert, variant, messageAlert, lasIdListState, valueData, idsItems, showCreate, valueProductName, valueProductImage, valueProductSize, valueProductPrice, valuePricePerOunce, messageErr, messageSuccess, messageErrCreate } = this.state;\n    const { dataTypeaheadProps, auth } = this.props;\n    return (\n      <>\n        {auth ? (\n          <>\n            <PageTitle title=\" Your Grocery List\" />\n            <Alert show={showAlert} key={1} variant={variant}>\n              {messageAlert}\n            </Alert>\n            <Container className=\"page__container\">\n              {valueData && valueData.length !== 0 ? (\n                <Row>\n                  <Button className='yourlist__buttonDeleteList'\n                    variant=\"danger\"\n                    onClick={e => {\n                      e.stopPropagation();\n                      this.handleShowDeleteList(idsItems);\n                    }}\n                  >\n                    Delete All Items\n                  </Button>\n                  {dataTypeaheadProps ? (\n                    <>\n                      {dataTypeaheadProps.map(itemList => {\n                        return <>\n                          <Col xs={12} md={12} lg={12} key={itemList.id}>\n                            <img src={`/images/products/${itemList.product_image}`} className=\"dataTypeahead__card-img\" alt=\"image product\" />\n                            <div className=\"dataTypeahead__card-div\">\n                              <Card.Header className=\"dataTypeahead__yourlist__card-header\">\n                                <div className=\"dataTypeahead__header__name-product\">Name Product : {itemList.product_name}</div>\n                              </Card.Header>\n                              <Card.Text className=\"dataTypeahead__yourlist__card-text\">\n                                Product Price :  {itemList && itemList.product_price}\n                              </Card.Text>\n                              <Card.Text className=\"dataTypeahead__yourlist__card-text\">\n                                Product Size : {itemList.sizes}\n                              </Card.Text>\n                            </div>\n                            <div className=\"dataTypeahead__buttonAdd\"><Button onClick={e => {\n                              e.stopPropagation();\n                              this.handleShowAddItem(itemList.id);\n                            }}> Add To Cart</Button> </div>\n\n                            <div className=\"dataTypeahead__buttonDelete\"><i class=\"fa fa-remove\" onClick={e => {\n                              e.stopPropagation();\n                              this.handleShowDeleteItem(itemList.id);\n\n                            }} ></i></div>\n                          </Col>\n                        </>\n                      })}\n                    </>\n                  ) :  \"Comes in here for datatypeahead dataTypeaheadProps 1\"}\n                  {valueData ? (\n                    valueData.map((itemList) => {\n                      let idItem = itemList.id;\n                      return <>\n                        <Col xs={12} md={12} lg={12} key={itemList.id}>\n                          {itemList.product_image.startsWith('http://') || itemList.product_image.startsWith('data') ? (\n                            <img src={`${itemList.product_image}`} alt=\"image product \" className=\"card-img\" />\n                          ) : (\n                              <img src={`/images/products/${itemList.product_image}`} alt=\"image product \" className=\"card-img\" />\n                            )}\n                          <div className=\"yourlist__card-div\">\n                            <Card.Header className=\"yourlist__card-header\">\n                              <div className=\"header__name-product\">Name Product : {itemList.product_name}</div>\n                            </Card.Header>\n                            <Card.Text className=\"yourlist__card-text\">\n                              Product Price :  {itemList && itemList.product_price}\n                            </Card.Text>\n                            <Card.Text className=\"yourlist__card-text\">\n                              Product Size : {itemList.sizes}\n                            </Card.Text>\n                          </div>\n                          <div className=\"yourlist__buttonAdd\"><Button onClick={e => {\n                            e.stopPropagation();\n                            this.handleShowAddItem(idItem);\n                          }}> Add To Cart</Button> </div>\n                          <div className=\"yourlist__buttonDelete\"><i className=\"fa fa-remove\" onClick={e => {\n                            e.stopPropagation();\n                            this.handleShowDeleteItem(itemList.id);\n                          }} ></i></div>\n                        </Col>\n                      </>\n                    })\n                  ) : <Spinner animation=\"border\" variant=\"info\" />}\n                </Row>\n              ) : (\n              <>\n                    <div>no items found here , you can add item from searchBar after that, refresh the page to show added items</div>\n                    {/* <Button className=\"yourlist__button-create\" onClick={this.handleShowCreateList}>create list</Button> */}\n                    {showCreate ? (\n                      <Modal show={showCreate} onHide={this.handleClose} backdrop=\"static\" className=\"modal-create\">\n                        <Modal.Body className=\"modal-create__body\">\n                          <Form.Group>\n                            <Form.Label className=\"yourlist__group-label\">Product Id: {lasIdListState}</Form.Label>\n                          </Form.Group>\n                          <Form.Group >\n                            <Form.Label className=\"yourlist__group-label\">Product Name :</Form.Label>\n                            <Form.Control\n                              className='create-input'\n                              type=\"text\"\n                              name=\"valueProductName\"\n                              value={valueProductName}\n                              placeholder=\"Enter name list\"\n                              onChange={this.handleChange}\n                            />\n                          </Form.Group>\n                          <Form.Group >\n                            <Form.Label className=\"yourlist__group-label\">Product Image :</Form.Label>\n                            <Form.Control\n                              className='create-input'\n                              type=\"text\"\n                              name=\"valueProductImage\"\n                              value={valueProductImage}\n                              placeholder=\"Enter image list\"\n                              onChange={this.handleChange}\n                            />\n                          </Form.Group>\n                          <Form.Group className=\"yourlist__group-label\">\n                            <Form.Label className=\"yourlist__group-label\">Product Price :</Form.Label>\n                            <Form.Control\n                              className='create-input'\n                              type=\"number\"\n                              name=\"valueProductPrice\"\n                              value={valueProductPrice}\n                              placeholder=\"Enter price list\"\n                              onChange={this.handleChange}\n                            />\n                          </Form.Group>\n                          <Form.Group className=\"yourlist__group-label\">\n                            <Form.Label className=\"yourlist__group-label\">Product Size :</Form.Label>\n                            <Form.Control\n                              className='create-input'\n                              type=\"text\"\n                              name=\"valueProductSize\"\n                              value={valueProductSize}\n                              placeholder=\"Enter size list\"\n                              onChange={this.handleChange}\n\n                            />\n                          </Form.Group>\n                          <Form.Group className=\"yourlist__group-label\">\n                            <Form.Label className=\"yourlist__group-label\">Product Price Per Ounce :</Form.Label>\n                            <Form.Control\n                              className='create-input'\n                              type=\"number\"\n                               name=\"valuePricePerOunce\"\n                              value={valuePricePerOunce}\n                              placeholder=\"Enter Price Per Ounce list\"\n                              onChange={this.handleChange}\n                            />\n                          </Form.Group>\n                          {messageErrCreate ? (\n                            <p className=\"create__msg-err\">{messageErrCreate}</p>\n                          ) : null}\n                        </Modal.Body>\n                        <Modal.Footer className=\"confirm__success\">\n                          <Button\n                            variant=\"secondary\"\n                            onClick={this.handleClose}\n                          >\n                            Close\n                    </Button>\n                           <Button\n                            className='create-button'\n                            variant=\"success\"\n                            onClick={this.handleCreateList}\n                          >\n                            create\n                    </Button>\n                        </Modal.Footer>\n                      </Modal>\n                    ) : \"prints this, nothing here 2\"} \n                  </>\n                )\n              }\n            </Container>\n          </>\n        ) : (\n            <>\n              <Container>\n                <Modal show={true} onHide={this.handleClose} className=\"modal loginformmm\" backdrop=\"static\">\n                  <Modal.Body>\n                    <Form className=\"login__form\">\n                      <div className=\"login__form-div-title\">\n                        <h2 className=\"login__form-title\">Log in to View Grocery</h2>\n                      </div>\n                      <div className=\"vl\">\n                        <span className=\"vl-innertext\">or</span>\n                      </div>\n                      <div className=\"col\">\n                        <a href=\"#\" className=\"fb btn\">\n                          <i className=\"fa fa-facebook fa-fw\"></i> Login with Facebook\n                        </a>\n                        <a  className=\"google btn\"><i className=\"fa fa-google fa-fw\">\n                        </i> Login with Google+\n                        </a>\n                      </div>\n\n                      <Form.Group>\n                        <Form.Label className=\"login__form__label\">Email</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"email\"\n                          value={email}\n                          placeholder=\"Enter your email\"\n                          onChange={this.handleChange}\n                          className='login__form__input'\n                        />\n                      </Form.Group>\n                      <Form.Group>\n                        <Form.Label className=\"login__form__label\">Password</Form.Label>\n                        <Form.Control\n                          type=\"password\"\n                          name=\"password\"\n                          value={password}\n                          placeholder=\"Enter your password\"\n                          onChange={this.handleChange}\n                          className='login__form__input'\n\n                        />\n                      </Form.Group>\n                      <p className=\"msg-success\">{messageSuccess}</p>\n                      <p className=\"msg-err\">{messageErr}</p>\n                      <span className=\"link-forgot-password\">Forget Password  ?</span>\n                      <Button\n                        type=\"button\"\n                        className=\"login__form-btn\"\n                        onClick={this.handleClick}\n                      >\n                        Log in\n                          </Button>\n                      <Form.Text className=\"login__form__text-muted\">\n                        Don’t have an account? {''}\n                        <Link className=\"link-signup-word\" to=\"/signup\">\n                          Sign Up\n                        </Link>\n                        <br />\n                        or\n                         <Link className=\"link-guest-word\" >\n                          continue as guest\n                        </Link>\n                      </Form.Text>\n                    </Form>\n                  </Modal.Body>\n                </Modal>\n              </Container>\n            </>\n          )}\n      </>\n    )\n  }\n}\n\n","import React from 'react';\nimport './style.css';\nimport { Form, Button, Container, Modal, Row, Col, ButtonToolbar } from 'react-bootstrap';\n\nimport { Link, Redirect } from 'react-router-dom';\nimport { setTimeout } from 'timers';\n\nexport default class SignUp extends React.Component {\n  state = {\n    email: '',\n    phone: '',\n    username: '',\n    password: '',\n    messageErr: false,\n    messageSuccess: false,\n    showModal: true,\n    emailNotification: false\n  };\n\n\n  handleChange = (e) => {\n    let name = e.currentTarget.name;\n    let value = e.currentTarget.value;\n    name === \"emailNotification\" ? this.setState({emailNotification: e.currentTarget.checked}) : this.setState({ [name]: value });\n\n  }\n\n\n  handleClose = (delay) => {\n    setTimeout(() => {\n      this.props.history.push('/grocery');\n    }, delay || 0);\n  };\n\n  formSubmit = (e) => {\n    e.preventDefault();\n    if((this.state.email || this.state.phone) && this.state.username && this.state.password) {\n      this.submitForm();\n    } else {\n      this.setState({ messageErr: 'Please enter correct data.' });\n    }\n  };\n\n  submitForm = () => {\n    fetch('/api/signupuser', {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(this.state),\n    }).then(response => {\n        if (response.status === 400 || response.status === 404) {\n          this.setState({ messageErr: 'Bad Request , Check username or password ... !!' });\n        } else if (response.status === 401) {\n          this.setState({ messageErr: 'you are UnAuthorized' });\n        } else if (response.status >= 500) {\n          this.setState({ messageErr: 'Sorry , Internal Server ERROR' })\n        } else {\n          this.setState({ messageErr: '', isAuthenticated: true, messageSuccess: 'You are sign up!!! ' });\n          this.handleClose(5000);\n        }\n      })\n  };\n\n  render() {\n    return (\n<Modal show={this.state.showModal} onHide={this.handleClose} className=\"modal registerme\" backdrop=\"static\">\n  <Modal.Header closeButton>\n    <Modal.Title style={{ width: '100%', textAlign: 'center' }}>\n      <div>Sign Up</div>\n      <span style={{ fontSize: '11pt' }}>Already have an account?  \n      <Link className=\"link-guest-word\" to=\"/login\">Login</Link></span>\n    </Modal.Title>\n  </Modal.Header>\n  <Modal.Body>\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col xs lg>\n          <Form className=\"\" onSubmit={this.formSubmit}>\n            <Form.Group>\n                <Form.Control\n                      type=\"text\"\n                      name=\"email\"\n                      value={this.state.email}\n                      placeholder=\"Your email\"\n                      onChange={this.handleChange}\n                    />\n                  <Form.Label>Or</Form.Label>\n                <Form.Control\n                      type=\"text\"\n                      name=\"phone\"\n                      value={this.state.phone}\n                      placeholder=\"Your Phone Number\"\n                      onChange={this.handleChange}\n                    />\n                  </Form.Group>\n                  <hr/>\n                  <Form.Group>\n                  <Form.Control\n                      type=\"text\"\n                      name=\"username\"\n                      value={this.state.username}\n                      placeholder=\"Username\"\n                      onChange={this.handleChange}\n                    />\n                    <Form.Label></Form.Label>\n                    <Form.Control\n                      type=\"password\"\n                      name=\"password\"\n                      value={this.state.password}\n                      placeholder=\"Create a Password\"\n                      onChange={this.handleChange}\n                    />\n                  </Form.Group>\n                  <Form.Group controlId=\"formHorizontalCheck\">\n                    <Form.Label></Form.Label>\n                    <Form.Check onChange={this.handleChange} name=\"emailNotification\" label=\"Sign Up for Email Notifications\" />\n                  </Form.Group>\n                  <p className=\"msg-success\">{this.state.messageSuccess}</p>\n                  <p className=\"msg-err\">{this.state.messageErr}</p>\n                  <ButtonToolbar>\n                    <Button variant=\"secondary\" type=\"submit\" className=\"login__form-btn\">Sign Up</Button>\n                  </ButtonToolbar>\n                  <Link className=\"\" to=\"/signup\">or Sign up as driver</Link>\n                </Form>\n              </Col>\n            </Row>\n          </Container>\n        </Modal.Body>\n      </Modal>\n    );\n  }\n\n}\n","/* eslint-disable no-dupe-class-members */\nimport React, { Component } from 'react';\nimport { Typeahead } from 'react-bootstrap-typeahead';\n\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\n// import ListedMealsSection from './components/mealMenu/ListedMealsSection';\n// import RecipeContentSection from './components/mealMenu/RecipeContentSection';\n// import IngredientSection from './components/mealMenu/IngredientSection';\nimport { Nav, Navbar, Alert, NavDropdown, Form, FormControl } from 'react-bootstrap'\nimport { Popover, PopoverBody } from 'reactstrap';\nimport Popup from \"reactjs-popup\";\n\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport { Spinner } from 'react-bootstrap'\nimport InfiniteCarousel from 'react-leaf-carousel';\nimport Slider from './components/product_slider/slider';\nimport WithScrollbar from './components/product_slider/WithScrollbar';\nimport RecipeContentSection from './components/mealMenu/RecipeContentSection';\nimport ListedMealsSection from './components/mealMenu/ListedMealsSection';\nimport IngredientSection from './components/mealMenu/IngredientSection';\nimport ProductsSection from './components/productSection/ProductsPage';\n//import Collapse from 'react-bootstrap/Collapse';\n// import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport CartPage from './components/GroceryPage/CartPage';\nimport Login from './components/Login';\nimport GroceryPage from './components/GroceryPage';\nimport SignUp from './components/signup';\nclass App extends Component {\n\n\n    meals = [];\n    // Mongo \n    products = [];\n\n    constructor(props) {\n        super(props);\n        this.suggestMealToggle = this.suggestMealToggle.bind(this);\n        this.updateInstructionsDisplayBaseIndex = this.updateInstructionsDisplayBaseIndex.bind(this);\n        // this.myFunction = this.myFunction.bind(this);\n\n        this.state = {\n            messageVisible: false,\n\n            showAlert: false,\n            messageAlert: '',\n            variant: '',\n            customerId: '',\n            idItem: '',\n            option: '',\n            itemTypeahead: [],\n            valueAllDataLists: [],\n            message: null,\n            isAuthenticated: false,\n\n            suggestMealPopOver: false,\n            mealsListed: false,\n            mealSelected: false,\n            IngredientsListed: false,\n            recipes: [], //[this.Garri, this.Jollof_Rice],\n            selectedMealIngredients: null,\n            selectedMeal: null,\n            showIngredients: {\n                hidden: true\n            },\n            showProducts: {\n                hidden: true\n            },\n            //open: false,\n\n            mealsLength: null,\n            base_index: 0,\n            topNav_className: \"w3-bar w3-dark-grey w3-green topnav\",\n        }\n    }\n\n    meal_popups = [];\n\n    componentDidMount() {\n\n        this.auth();\n        console.log(\"Comes in apps component did mount\")\n        var url = \"http://localhost:5000/get_products\"\n        fetch(url)\n            .then(res => res.text())\n            .then(body => {\n                var productsList = JSON.parse(body);\n\n                for (var i = 0; i < productsList.length; i++) {\n                    this.products.push(productsList[i].product_name);\n                    // console.log(productsList[i].product_name)\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            });\n\n\n    }\n\n    showIngredients = (event) => {\n        let mealString = event.target.innerText;\n        console.log(mealString);\n\n        var meal;\n        for (meal in this.meals) {\n            //console.log(this.meals[meal].label);\n            if (this.meals[meal].label === mealString) {\n                //change selected ingredients\n                this.setState({ selectedMealIngredients: this.meals[meal].ingredients });\n                this.setState({ selectedMeal: this.meals[meal] });\n                break;\n            }\n        }\n        //get list of ingredients\n    }\n\n    suggestMealToggle() {\n        this.setState({\n            suggestMealPopOver: !this.state.suggestMealPopOver\n        });\n    }\n\n    meal_popups = [];\n\n    componentDidMount() {\n        console.log(\"Comes in component did mount\")\n        var url = \"http://localhost:5000/get_products\"\n        var url = \"https://chopchowsd.herokuapp.com/get_products\" // call in production\n\n        fetch(url)\n            .then(res => res.text())\n            .then(body => {\n                console.log()\n                var productsList = JSON.parse(body)\n                for (var i = 0; i < productsList.length; i++) {\n                    this.products.push(productsList[i].product_name);\n                    console.log(productsList[i].product_name)\n                }\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    showIngredient(index) {\n        console.log(\"updating popup boolean\");\n        this.meal_popups[index] = !this.meal_popups[index]\n    }\n\n    updateInstructionsDisplayBaseIndex(event) {\n        console.log(event.target.innerText);\n        var button = event.target.innerText;\n        var regExp = '/^w+[ ]/d  $/';\n        var slide_index = button.match(regExp);\n        //console.log(slide_index);\n        var last_chars = button.slice(6, 7);\n\n        var slide_num = Number(last_chars);\n\n        this.setState({ base_index: slide_num * 3 })\n        //var base_index = slide_num*3;\n        //console.log(\"Updating base index on click to: \" +this.state.base_index);\n    }\n\n    auth() {\n        fetch('/api/grocery', {\n            method: 'GET',\n            credentials: 'same-origin',\n            headers: {\n                'Content-type': 'application/json',\n            },\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (res.success) {\n                    this.setState({ isAuthenticated: true })\n                }\n            }).catch((err) =>\n                console.log('err', err)\n            )\n\n    }\n\n    handleLogout = () => {\n        fetch('/api/logout', {\n            method: \"GET\",\n            credentials: 'same-origin',\n            headers: {\n                'Content-type': 'application/json',\n\n            }\n        }).then(res => {\n\n            res.json()\n                .then(response => {\n                    if (response.data) {\n                        this.setState({ isAuthenticated: false })\n                    }\n                })\n        })\n            .catch(() => {\n                this.setState({\n                    messageAlert: 'internal server error',\n                    showAlert: true,\n                    variant: 'danger'\n                },\n                    () =>\n                        setTimeout(() => {\n                            this.setState({ messageAlert: '', showAlert: false })\n                        }, 6000)\n                )\n\n\n\n\n            })\n    }\n\n    componentDidMount() {\n        this.handleLogout();\n        this.auth();\n        this.handleClickTypeahead = (optionItem) => {\n            const { itemTypeahead } = this.state;\n            if (!optionItem) return;\n            console.log(optionItem)\n            optionItem.map(option => {\n                fetch(`/api/get-data-typeahead/${option}`, {\n                    method: 'GET',\n                    credentials: 'same-origin',\n                    headers: {\n                        Accept: 'application/json',\n                        'Content-Type': 'application/json',\n                    },\n                })\n                    .then(res => {\n                        return res.json()\n                    })\n                    .then(responseGet => {\n                        this.setState({ idItem: responseGet.data[0].id })\n                        const { customerId, idItem } = this.state;\n                        fetch(`/api/add-data-typeahead-for-customer/${idItem}/${customerId}`, {\n                            method: 'POST',\n                            credentials: 'same-origin',\n                            headers: {\n                                Accept: 'application/json',\n                                'Content-Type': 'application/json',\n                            },\n                        })\n                            .then(res => {\n                                if (res) {\n                                    if (res.status === 500) {\n                                        this.setState({\n                                            messageAlert: 'internal server error',\n                                            showAlert: true,\n                                            variant: 'danger'\n                                        },\n                                            () =>\n                                                setTimeout(() => {\n                                                    this.setState({ messageAlert: '', showAlert: false })\n                                                }, 6000)\n                                        )\n\n                                    } else if (res.status === 200) {\n                                        return res.json()\n                                            .then(response => {\n                                                this.setState({ itemTypeahead: [] })\n                                                this.setState({ itemTypeahead: [...itemTypeahead, ...responseGet.data] })\n                                            })\n                                    } else if (res.status === 304) {\n                                        return res.json()\n                                            .then(response => {\n                                                this.setState({ itemTypeahead: [] })\n                                                this.setState({ itemTypeahead: [...itemTypeahead] })\n                                            })\n                                    }\n                                }\n                            })\n                    })\n            })\n        }\n\n        fetch('/api/grocery', {\n            method: 'GET',\n            headers: {\n                'Content-type': 'application/json',\n            },\n        })\n            .then(res => {\n                return res.json()\n\n            })\n            .then(response => {\n                if (response.success && response.data) {\n                    this.setState({ Authentication: true });\n                } else {\n                    this.setState({ Authenticated: false })\n                }\n                this.setState({ customerId: response.data })\n                const { customerId } = this.state;\n                fetch(`/api/getList/${customerId}`, {\n                    method: 'GET',\n                    credentials: 'same-origin',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n\n                })\n                    .then(res => {\n                        return res.json()\n                    })\n                    .then(response => {\n                        if (response) {\n                            this.setState({ valueData: response.data })\n                        }\n                    }).catch(() => {\n                        this.setState({\n                            messageAlert: 'internal server error',\n                            showAlert: true,\n                            variant: 'danger'\n                        },\n                            () =>\n                                setTimeout(() => {\n                                    this.setState({ messageAlert: '', showAlert: false })\n                                }, 6000)\n                        )\n                    })\n            })\n\n\n        fetch('/api/get-all-data-lists', {\n            method: 'GET',\n            credentials: 'same-origin',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n\n        })\n            .then(res => res.json())\n            .then(response => {\n                if (response) {\n                    let arrAllData = [];\n                    let resArr = response.data\n\n                    for (let i = 0; i <= resArr.length - 1; i++) {\n\n                        arrAllData.push(response.data[i].product_name);\n\n                        this.setState({ valueAllDataLists: arrAllData })\n                    }\n                }\n            }).catch(() => {\n                this.setState({\n                    messageAlert: 'internal server error',\n                    showAlert: true,\n                    variant: 'danger'\n                },\n                    () =>\n                        setTimeout(() => {\n                            this.setState({ messageAlert: '', showAlert: false })\n                        }, 6000)\n                )\n\n\n            })\n\n\n        fetch('/api/get-meals', {\n            method: 'GET',\n            credentials: 'same-origin',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n\n        })\n            .then(res => res.json())\n            .then(response => {\n                if (response) {\n                    this.setState({\n                        recipes: response.data,\n                        selectedMealIngredients: response.data[0].new_ingredients,\n                        selectedMeal: response.data[0],\n                        mealsLength: response.data.length\n                    });\n                }\n            }).catch((err) => {\n                console.log('err', err);\n\n            })\n\n\n\n    }\n\n\n\n    render() {\n        const { messageAlert, showAlert, variant, itemTypeahead, valueAllDataLists, isAuthenticated, } = this.state;\n\n        // Render your page inside\n        // the layout provider\n        //const elements = ['one', 'two', 'three'];\n        //const popOverInfo = []\n        const items = []\n\n\n\n        for (const [index, value] of this.state.recipes.entries()) {\n            var base_index = 0;\n            const mealPrep = value.instructions.map((step) => <li key={step} > {step} </li>);\n            var popUpSlides = [];\n\n            const instructionsLength = value.instructions.length;\n            // console.log(instructionsLength);\n\n            // var mealIngredient = value.ingredients ;\n            const ingredientsList = value.ingredients.map((step) => <li key={step} > {step} </li>);\n            var i;\n            for (i = 0; i < instructionsLength / 3; i++) {\n                popUpSlides.push(<button key={i} onClick={this.updateInstructionsDisplayBaseIndex}>Slide {i}  </button>)\n            }\n            this.meal_popups.push(false);\n            // console.log(this.meal_popups);\n            // console.log(index);\n            items.push(\n                <>\n                    <div className=\"col-sm-12 col-md-6 col-lg-4 mealContainer\" key={value.id} >\n                        <div>\n                            <div style={containerStyle} onClick={() => {\n                                this.meal_popups[index] = !this.meal_popups[index];\n                                console.log(this.meal_popups);\n                                var x = document.getElementById(value.id);\n                                var y = document.getElementById(value.id + \"products\")\n                                if (this.meal_popups[index]) {\n                                    x.style.display = \"block\";\n                                    y.style.display = \"block\";\n\n                                }\n                                else {\n                                    x.style.display = \"none\";\n                                    y.style.display = \"none\";\n                                }\n                            }}>\n                                <img src={value.imageSrc} className=\"images\" style={{ width: \"100%\" }} alt={value.id}></img>\n                                {/* <img src={value.imageSrc} className=\"images\" style={{width:\"100%\"}} alt={value.id} onClick={this.showIngredient(index)}></img> */}\n                                <div style={{ color: \"black\" }}> <b> {value.label} | {value.cookTime}  </b>| <span style={{ color: \"grey\" }}> View Details</span></div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <Popup\n                        trigger={\n                            <div id={value.id} style={{ display: \"none\" }}>\n                                {value.intro}\n                                <br></br>\n                                <br></br>\n                                <button style={{ backgroundColor: \"orange\" }}>View Steps</button>\n                                <br></br>\n                            </div>\n\n\n                        } modal closeOnDocumentClick contentStyle={contentStyle}>\n\n                        {/* Inside Pop - up */}\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                <div className=\"col-sm-6\">\n                                    <div><b>Ingredients</b></div>\n                                    <div className=\"col align-items-center\"><ol>{ingredientsList}</ol></div>\n                                </div>\n                                <div className=\"col-sm-6\"><b>\n                                    <div className=\"col\">{value.readTime}<br></br>{value.cookTime}</div>\n                                    {/* <div className=\"col\"></div> */}\n                                </b>\n                                </div>\n                                <div id=\"mealPrepChunk\">\n                                    {mealPrep[this.state.base_index + 0]}\n                                    {mealPrep[this.state.base_index + 1]}\n                                    {mealPrep[this.state.base_index + 2]}\n                                </div>\n                            </div>\n                            <br></br>\n                            {/* <div className=\"row\">\n                            <div className=\"col-sm-12\">\n                                <img src={value.imageSrc} alt='info' style={{ width:\"100%\", height:\"100%\", align:\"center\"}}></img>\n                            </div>\n                        </div> */}\n                        </div>\n                        <hr></hr>\n\n                        <span>Overview</span>&nbsp;|&nbsp;<span>Kitchen accessories for this meal</span>&nbsp;|&nbsp;<span>Add To Cart..</span>\n                        <br></br>\n                        {popUpSlides}\n                        <img src={value.imageSrc} alt='info' style={{ width: \"100%\", height: \"100%\", align: \"center\" }}></img>\n                        <hr></hr>\n                        {/* <div className=\"col\">\n                        <div className=\"col align-items-center\"><ol>{mealPrep}</ol></div>\n                    </div> */}\n\n                        {/* </div> */}\n\n                        {/* </div> */}\n                        {/* <div>\n                    <div className=\"col align-items-left\">\n                        <img src={value.imageSrc} alt='info'  style={{width:'35%', height:'35%', align:\"center\"}}></img>\n                    </div>\n                    <div>                            \n                        <div className=\"col align-items-center\"><ol>{mealPrep}</ol></div>\n                    </div>\n                    </div>\n                    */}\n\n                    </Popup>\n                    <div id={value.id + \"products\"} style={{ display: \"none\" }}>\n                        <b>Ingredients 1</b>\n                        <br></br>\n                        {value.products}\n                        <WithScrollbar products={value.product_slider} ingredients={[{ \"name\": \"sugar\", \"image\": \"/images/products/sugar.jpeg\" }, { \"name\": \"onion\", \"image\": \"/images/products/onion.jpg\" }, { \"name\": \"tomato\", \"image\": \"/images/products/tomato.jpg\" }, { \"name\": \"water\", \"image\": \"/images/products/water.jpeg\" }, { \"name\": \"vegetable oil\", \"image\": \"/images/products/vegetable_oil.jpg\" }]} />\n                        <br />\n\n                    </div>\n                </>\n            )\n        }\n\n        /* Toggle between adding and removing the \"responsive\" class to topnav when the user clicks on the icon */\n        function myFunction() {\n            var x = document.getElementById(\"myTopnav\");\n            console.log(x);\n            // console.log({this.state.topNav_className});\n            if (x.className === \"w3-bar w3-dark-grey w3-green topnav\") {\n                x.className += \" responsive\";\n            }\n            else {\n                x.className = \"w3-bar w3-dark-grey w3-green topnav\";\n            }\n\n            // var y = document.getElementById(\"myTopnav2\");\n            // if (y.className === \"topnav\"){\n            //     y.className += \" responsive\";\n            //   }\n            //   else{\n            //       //sync test nav bar as well\n            //       y.className = \"topnav\";\n            //   }\n        }\n\n\n        return (\n            <div>\n                {/* Top navbar */}\n                {/* <div className={this.state.topNav_className} id=\"myTopnav\"> */}\n                <div className=\"w3-bar w3-white w3-green topnav \" id=\"myTopnav\">\n                    {/* <a href=\"/v2\" className=\"w3-bar-item w3-button w3-text-orange w3-hover-orange w3-mobile\">CC</a> */}\n\n                    <Link to=\"/v2\" className=\"w3-bar-item w3-button w3-text-orange w3-hover-orange w3-mobile\">CC</Link>\n\n                    {/* Searchbar */}\n\n                    <Link to=\"/\" className=\"w3-bar-item w3-button w3-text-grey w3-hover-orange w3-mobile\"> Stats</Link>\n\n                    <Link to=\"/v2\" className=\"w3-bar-item w3-button w3-hover-orange w3-mobile w3-text-black w3-text-align-right\">Login/Register</Link>\n\n                    <Link to=\"/grocery\" onClick={this.handleClickGrocery} className=\"w3-bar-item w3-button w3-hover-orange w3-mobile w3-text-black\">Grocery List</Link>\n\n\n                    <div className=\"w3-dropdown-hover w3-mobile\">\n                        <button className=\"w3-button w3-hover-orange w3-mobile w3-text-black\">\n                            Shopping Cart <i className=\"fa fa-caret-down\"></i>\n                        </button>\n                        <div className=\"w3-dropdown-content w3-bar-block w3-card-4 \">\n                            <Link to=\"/products\" className=\"w3-bar-item w3-button w3-text-black w3-hover-orange w3-mobile w3-text-black\">Food Products</Link>\n                            <Link to=\"/products\" className=\"w3-bar-item w3-button w3-text-black w3-hover-orange w3-mobile w3-text-black\">Kitchen Products</Link>\n                            <Link to=\"/products\" className=\"w3-bar-item w3-button w3-text-black w3-hover-orange w3-mobile w3-text-black\">Other Household Items</Link>\n                        </div>\n                    </div>\n                \n                    <Link to=\"#\" className=\"icon\" onClick={() => { console.log(\"Comes thru here\"); myFunction() }} >\n                        <i className=\"fa fa-bars\" ></i>\n                    </Link>\n                    {isAuthenticated ? (\n\n                        <Link to=\"/\" onClick={this.handleLogout} className=\"w3-bar-item w3-button w3-hover-orange w3-mobile\">Logout</Link>\n                    ) : null}\n\n                </div>\n\n                 {/* Bottom navbar */}\n                <div className=\"w3-bar w3-dark-grey w3-green topnav\" id=\"myTopnav\">\n                    {/* <a href=\"/v2\" className=\"w3-bar-item w3-button w3-text-orange w3-hover-orange w3-mobile\">CC</a> */}\n\n                    <Link to=\"/v2\" className=\"w3-bar-item w3-button w3-hover-orange w3-mobile\">Home</Link>\n\n                    <Link to=\"/products\" onClick={this.handleClickGrocery} className=\"w3-bar-item w3-button w3-hover-orange w3-mobile\">Products</Link>\n\n                    <Link to=\"/\" className=\"w3-bar-item w3-button w3-text-grey w3-hover-orange w3-mobile\"> Recipes</Link>\n                \n                    <Link to=\"#\" className=\"icon\" onClick={() => { console.log(\"Comes thru here\"); myFunction() }} >\n                        <i className=\"fa fa-bars\" ></i>\n                    </Link>\n                    {isAuthenticated ? (\n\n                        <Link to=\"/\" onClick={this.handleLogout} className=\"w3-bar-item w3-button w3-hover-orange w3-mobile\">Logout</Link>\n                    ) : null}\n\n                </div>\n\n\n                <Typeahead\n                    onChange={this.handleClickTypeahead}\n                    multiple\n                    options={valueAllDataLists}\n                    placeholder=\"Find Meals (and Ingredients) here..\"\n                    id=\"typeahead\"\n                />\n                <Alert show={showAlert} key={1} variant={variant}>\n                    {messageAlert}\n                </Alert>\n\n                {this.state.messageVisible ? (\n                    <div>you can not addin this item because is found for this customer</div>\n                ) : null}\n\n                <Switch>\n                    <Route\n                        exact\n                        path=\"/login\"\n                        render={props => (\n                            <Login {...props} />\n                        )}\n                    />\n\n                    <Route\n                        exact\n                        path=\"/signup\"\n                        render={props => (\n                            <SignUp {...props} />\n                        )}\n                    />\n                    \n                    <Route exact path=\"/\" render={(props) => (\n                        <div>\n                            <div id=\"title\">\n                                <b>Meals</b>\n                            </div>\n\n                            <div className=\"container\">\n                                <div className=\"row\">\n                                    {items}\n                                </div>\n                            </div>\n                        </div>\n                    )} />\n\n                    <Route path=\"/v1\" render={(props) => (\n                        <div className=\"container\">\n                            <br></br>\n                            <div className=\"row\">\n                                <div className=\"col-sm\">\n                                    <b>Meals</b>\n                                    <ListedMealsSection\n                                        recipes={this.state.recipes} showIngredients={this.showIngredients}\n                                        selectedMeal={this.state.selectedMeal} />\n                                    <span>&#43;</span><input placeholder=\"Suggest Meal\"></input>\n\n                                    &nbsp;<button>Submit <span id=\"Popover1\" onMouseOver={this.suggestMealToggle} onMouseOut={this.suggestMealToggle} >\n                                        <img src=\"/images/info_icon.png\" alt=\"info\" style={{ width: '13px', height: '13px' }} /> </span></button>\n                                    {/* onClick={this.suggestMealToggle} */}\n                                </div>\n                                <div className=\"col-sm\">\n                                    <b>Recipe Contents</b>\n                                    <RecipeContentSection selectedMeal={this.state.selectedMeal} />\n\n                                </div>\n\n                                <div className=\"col-sm\">\n                                    <b>Ingredients</b>\n                                    <IngredientSection selectedMealIngredients={this.state.selectedMealIngredients}\n                                        selectedMeal={this.state.selectedMeal} />\n                                    {/* <span>&#43;</span><input placeholder=\"Suggest Ingredient..\"></input> */}\n                                </div>\n\n                                <Popover placement=\"auto\" isOpen={this.state.suggestMealPopOver} target=\"Popover1\" toggle={this.suggestMealToggle}>\n                                    <PopoverBody><div className=\"payback-disclaimer\">\n                                        Suggestions by Guest Users are recorded, but do not change the publicly displayed Meals.\n                </div></PopoverBody>\n                                </Popover>\n                            </div>\n                        </div>\n                    )} />\n\n                    <Route path=\"/v2\" render={(props) => (\n                        <div>\n                            <div id=\"title\">\n                                <b>Meals</b>\n                            </div>\n\n\n                            <div className=\"container\">\n                                <div className=\"row\">\n                                    {items}\n                                </div>\n                            </div>\n                        </div>\n                    )} />\n\n\n\n                    <Route\n                        exact\n                        path=\"/grocery\"\n                        render={() => (\n                            <GroceryPage\n                                auth={isAuthenticated}\n                                dataTypeaheadProps={itemTypeahead}\n                            />\n\n                        )}\n\n                    />\n\n                    )}\n\n                />\n                    <Route\n                        exact\n                        path=\"/grocery-empty\"\n                        render={props => (\n\n                            <span className=\"grocery-page-empty__message\">Sorry you must make log in to seen grocery list </span>\n                        )} />\n                    <Route\n                        exact\n                        path=\"/cart-page/:idItem\"\n                        component={CartPage}\n\n                    />\n                    <Route path=\"/products\" render={(props) => (\n                        <ProductsSection />\n                    )} />\n                </Switch>\n\n                {/* <div className=\"row\">\n    <div className=\"col-sm\">\n        <b>Meals</b>\n        <ListedMealsSection \n        recipes={this.state.recipes} showIngredients={this.showIngredients}\n        selectedMeal={this.state.selectedMeal}/>\n        \n        \n\n        </div>                     \n    <div className=\"col-sm\">\n        <b>Recipe Contents</b>\n        <RecipeContentSection selectedMeal= {this.state.selectedMeal}/>\n        \n    </div>\n\n    <div className=\"col-sm\">\n        <b>Ingredients</b>\n        <IngredientSection selectedMealIngredients= {this.state.selectedMealIngredients}\n        selectedMeal= {this.state.selectedMeal}/>\n    </div>\n    \n    \n</div> */}\n            </div>\n        );\n    }\n}\n\nconst containerStyle = {\n    //font: \"50px\",\n    display: \"inline-block\",\n    width: \"100%\",\n    height: \"100%\",\n\n}\n\nconst contentStyle = {\n    // borderRadius: \"25px\",\n    maxWidth: \"100vw\",\n    maxHeight: \"100vh\",\n    overflow: \"scroll\",\n    width: \"80%\",\n};\n\n\n/* Toggle between adding and removing the \"responsive\" class to topnav when the user clicks on the icon */\n// function myFunction() {\n//     var x = document.getElementById(\"myTopnav\");\n//     console.log(\"Hello World 2\");\n//     // if (x.className === \"topnav\") {\n//     //   x.className += \" responsive\";\n//     // } else {\n//     //   x.className = \"topnav\";\n//     // }\n//   }\n\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import App2 from './App';\nimport { BrowserRouter} from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter >\n        <App/>\n    </BrowserRouter>, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}